.offset 0x6000 ; bootloader is in 0x6000, copied there by another script
start:
    mov a 0
    str a [gottenNZ]
    ; currSector -> A
    ld a [currSector]
    str a 0x7cff

    mov b 512
    mul
    str c [sectorOffset]

    mov a 0
    str a [bytePointer]

    mov a 0
    str a [ptrThing]

    copySector:
        ld a [sectorOffset]
        ld b [bytePointer]
        add
        ;
        swp a c
        mov b 0x8000 ; default code position
        add
        str c [targetPointer]

        ; ld a [sectorOffset]
        mov a 0x7d00
        ; add
        ; swp c a
        ld b [ptrThing]
        add
        ld b [targetPointer]
        swpm c b

        ldr a c
        mov b 0
        crr a a b
        mov b 1
        xor
        swp a c
        ld b [gottenNZ]
        or
        str c [gottenNZ]

        ;continue loop
        ; pointer to 8xxx
        ld a [ptrThing]
        mov b 1
        add
        str c [ptrThing]

        ; pointer offset for sector thing
        ld a [bytePointer]
        mov b 1
        add
        str c [bytePointer]

        ; offset == 513
        cmp c 513
        jz copySector
    ; continue main loop
    ld a [currSector]
    mov b 1
    add
    str c [currSector]
    ld a [gottenNZ]
    cmp a 0
    jz start
    ;escaped
    jmp 0x8001

ptrThing:
.hex 0
currSector:
.hex 0
sectorOffset:
.hex 0
bytePointer:
.hex 0
gottenNZ:
.hex 0
targetPointer:
.hex 0